{"version":3,"sources":["Toggler.js","App.js","index.js"],"names":["colors","containerBorder","sky","planet","border","surface","fadeInAnimation","keyframes","_templateObject","fadeOutAnimation","_templateObject2","Switch","styled","label","_templateObject3","p","width","height","Input","input","_templateObject4","Sky","span","_templateObject5","props","day","borderWidth","Planet","_templateObject6","planetPadding","concat","FreelyPositionedRoundedElement","_templateObject7","top","left","visible","ANIM_DURATION","Cloud","_templateObject8","FreelyPositionedRoundElement","react_default","a","createElement","Object","assign","diameter","Crater","_templateObject9","Star","_templateObject10","Toggler","_ref","borderSize","onToggle","_useState","useState","_useState2","slicedToArray","toggled","setToggled","planetDiameter","type","onChange","event","target","checked","onClick","Title","h1","App_templateObject","SubTitle","h2","App_templateObject2","AppWrapper","div","App_templateObject3","ToggleWrapper","App_templateObject4","ToggleContainer","src_Toggler","App","href","App_ToggleContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.22fcd4aa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst ANIM_DURATION = 0.5;\n\nconst colors = {\n    day: {\n        containerBorder: '#A0B7C4',\n        sky: '#C5D5DE',\n        planet: {\n            border: '#DBC85E',\n            surface: '#F2DE8A',\n        }\n    },\n    night: {\n        containerBorder: '#1B1D1C',\n        sky: '#39383d',\n\n        planet: {\n            border: '#E1E3D5',\n            surface: '#FFFFFD'\n        }\n    }\n}\n\nconst fadeInAnimation = keyframes`\n  0% {\n    transform: translate(20px, -20px);\n    opacity: 0;\n  }\n  100% {\n    transform: translate(0px, 0px);\n    opacity: 100;\n  }\n`\n\nconst fadeOutAnimation = keyframes`\n  0% {\n    transform: translate(0px, 0px);\n    opacity: 100;\n  }\n  100% {\n    transform: translate(20px, -20px);\n    opacity: 0;\n  }\n`;\n\nconst Switch = styled.label`\n    position: relative;\n    display: inline-block;\n    min-width: ${p => p.width}px;\n    min-height: ${p => p.height}px;\n\n    & * {\n        cursor: pointer;\n    }\n`;\n\nconst Input = styled.input`\n    opacity: 0;\n    width: 0;\n    height: 0;\n`;\n\nconst Sky = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 50%;\n    background-color: ${props => props.day ? colors.day.sky : colors.night.sky};\n    border: ${p => p.borderWidth}px solid ${props => props.day ? colors.day.containerBorder : colors.night.containerBorder};\n    border-radius: ${p => p.height / 2 + p.borderWidth}px;\n    transition: border ${ANIM_DURATION}s, background-color ${ANIM_DURATION}s;\n    width: ${p => p.width}px;\n    height: ${p => p.height}px;\n`;\n\nconst Planet = styled.span`\n    position: absolute;\n    left: ${p => p.planetPadding}px;\n    bottom: ${p => p.planetPadding}px;\n    top: ${p => p.planetPadding}px;\n    width: ${p => p.height - p.planetPadding * 2}px;\n    background-color: ${props => props.day ? colors.day.planet.surface : colors.night.planet.surface};\n    border: ${p => p.borderWidth}px solid ${props => props.day ? colors.day.planet.border : colors.night.planet.border};\n    border-radius: 50%;\n    transform: ${props => props.day ? 'none' : `translateX(${props.width - props.planetPadding * 2 - (props.height - props.planetPadding * 2)}px)`};\n    transition: all ${ANIM_DURATION}s ;\n    box-sizing: border-box;\n    overflow: hidden;\n    z-index: 2;\n`;\n\nconst FreelyPositionedRoundedElement = styled.span`\n    top: ${props => props.top}px;\n    left: ${props => props.left}px;\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    opacity: ${props => props.visible ? '100' : '0' };\n    animation: ${props => props.visible ? fadeInAnimation : fadeOutAnimation} ${ANIM_DURATION / 2}s ease-in-out 0s 1\n    border-radius: ${props => props.height / 2}px;\n\n    display: inline-block;\n    position: absolute;\n`;\n\nconst Cloud = styled(FreelyPositionedRoundedElement)`\n  background-color: white;\n  z-index: 2;\n`;\n\nconst FreelyPositionedRoundElement = props => <FreelyPositionedRoundedElement {...props} width={props.diameter} height={props.diameter} />;\n\nconst Crater = styled(FreelyPositionedRoundElement)`\n    border: 3px solid ${colors.night.planet.border};\n    background-color: transparent;\n    border-radius: 50%;\n    z-index: 2;\n`;\n\nconst Star = styled(FreelyPositionedRoundElement)`\n  background-color: white;\n  z-index: 1;\n`;\n\nconst Toggler = ({width, height, planetPadding, borderSize, onToggle}) => {\n    const [toggled, setToggled] = useState(false);\n\n    const planetDiameter = height - (planetPadding * 2);\n    return (\n        <Switch height={height + borderSize * 2} width={width + borderSize * 2}>\n            <Input type=\"checkbox\" onChange={event => {\n                    onToggle(event.target.checked)\n                    setToggled(event.target.checked)\n                }}\n            />\n            <Sky\n                day={!toggled}\n                onClick={setToggled}\n                borderWidth={borderSize}\n                width={width}\n                height={height}\n            >\n                <Planet day={!toggled} width={width} height={height} planetPadding={planetPadding} borderWidth={borderSize}>\n                    <Crater visible={toggled} diameter={0.11 * planetDiameter} top={0.05 * planetDiameter} left={0.05 * planetDiameter} />\n                    <Crater visible={toggled} diameter={0.09 * planetDiameter} top={0.16 * planetDiameter} left={0.32 * planetDiameter} />\n                    <Crater visible={toggled} diameter={0.11 * planetDiameter} top={0.05 * planetDiameter} left={0.05 * planetDiameter} />\n                    <Crater visible={toggled} diameter={0.11 * planetDiameter} top={0.32 * planetDiameter} left={0.05 * planetDiameter} />\n                </Planet>\n                <Cloud top={height * 0.3} left={width * 0.25} visible={!toggled} width={width * 0.35} height={height * 0.15} />\n                <Cloud top={height * 0.55} left={width * 0.4} visible={!toggled} width={width * 0.4} height={height * 0.15} />\n\n                <Star top={height * 0.5} left={width * 0.375} visible={toggled} diameter={height * 0.08} />\n                <Star top={height * 0.3} left={width * 0.16} visible={toggled} diameter={height * 0.04} />\n                <Star top={height * 0.5} left={width * 0.2} visible={toggled} diameter={height * 0.04} />\n            </Sky>\n        </Switch>\n    );\n}\n\nexport default Toggler;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Toggler from './Toggler';\n\nconst Title = styled.h1`\n  margin-bottom: 0.3rem;\n  font-size: 4rem;\n`;\n\nconst SubTitle = styled.h2`\n  margin-top: 7rem;\n`\n\nconst AppWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 4rem;\n  margin-bottom: 7rem;\n\n  * {\n    font-family: 'Roboto Slab', serif;\n  }\n`;\n\nconst ToggleWrapper = styled.div`\n  background-color: ${p => p.toggled ? 'rgb(30,30,30)' : 'rgb(244,244,244)'};\n  transition: background-color 0.5s;\n  border-radius: 100px;\n  height: 130px;\n  width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ToggleContainer = ({width, height, borderSize, planetPadding}) => {\n  const [toggled, setToggled] = useState(false);\n\n  return (\n    <ToggleWrapper toggled={toggled}>\n      <Toggler width={width} height={height} borderSize={borderSize} planetPadding={planetPadding} onToggle={setToggled} />\n    </ToggleWrapper>\n  );\n}\n\nconst App = () => (\n  <AppWrapper>\n    <Title> Sky toggle </Title>\n    <a href=\"https://github.com/Wombbu/sky-toggle\"> Go check the project on GitHub </a>\n    <SubTitle> Vanilla toggle is vanilla </SubTitle>\n    <ToggleContainer width={80} height={45} borderSize={3} planetPadding={1} />\n\n    <SubTitle> Sleek toggle is sleek </SubTitle>\n    <ToggleContainer width={80} height={45} borderSize={0} planetPadding={3} />\n\n    <SubTitle> Round toggle is round </SubTitle>\n    <ToggleContainer width={80} height={80} borderSize={0} planetPadding={3} />\n\n    <SubTitle> Long toggle is loooooong </SubTitle>\n    <ToggleContainer width={300} height={45} borderSize={3} planetPadding={2} />\n\n    <SubTitle> Stupid toggle is stupid </SubTitle>\n    <ToggleContainer width={60} height={45} borderSize={4} planetPadding={8} />\n\n  </AppWrapper>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}